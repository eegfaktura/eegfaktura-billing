<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="24.934" tests="12" errors="0" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="gnome"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="jdk.extensions.version" value="17.0.9.0"/>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/hla/IdeaProjects/eegfaktura-billing/target/test-classes:/home/hla/IdeaProjects/eegfaktura-billing/target/classes:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.2/spring-boot-starter-web-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.2/spring-boot-starter-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.2/spring-boot-starter-logging-3.1.2.jar:/home/hla/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/home/hla/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/home/hla/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/hla/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/home/hla/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hla/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.2/spring-boot-starter-json-3.1.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.2/spring-boot-starter-tomcat-3.1.2.jar:/home/hla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.11/tomcat-embed-core-10.1.11.jar:/home/hla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.11/tomcat-embed-websocket-10.1.11.jar:/home/hla/.m2/repository/org/springframework/spring-web/6.0.11/spring-web-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-beans/6.0.11/spring-beans-6.0.11.jar:/home/hla/.m2/repository/io/micrometer/micrometer-observation/1.11.2/micrometer-observation-1.11.2.jar:/home/hla/.m2/repository/io/micrometer/micrometer-commons/1.11.2/micrometer-commons-1.11.2.jar:/home/hla/.m2/repository/org/springframework/spring-webmvc/6.0.11/spring-webmvc-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-context/6.0.11/spring-context-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-expression/6.0.11/spring-expression-6.0.11.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.2/spring-boot-starter-validation-3.1.2.jar:/home/hla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.11/tomcat-embed-el-10.1.11.jar:/home/hla/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/hla/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/hla/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/hla/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.2/spring-boot-starter-data-jpa-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.2/spring-boot-starter-aop-3.1.2.jar:/home/hla/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.2/spring-boot-starter-jdbc-3.1.2.jar:/home/hla/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/hla/.m2/repository/org/springframework/spring-jdbc/6.0.11/spring-jdbc-6.0.11.jar:/home/hla/.m2/repository/org/hibernate/orm/hibernate-core/6.2.6.Final/hibernate-core-6.2.6.Final.jar:/home/hla/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hla/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hla/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/hla/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/hla/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/home/hla/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/hla/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/hla/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/hla/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hla/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hla/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/hla/.m2/repository/org/springframework/data/spring-data-jpa/3.1.2/spring-data-jpa-3.1.2.jar:/home/hla/.m2/repository/org/springframework/data/spring-data-commons/3.1.2/spring-data-commons-3.1.2.jar:/home/hla/.m2/repository/org/springframework/spring-orm/6.0.11/spring-orm-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-tx/6.0.11/spring-tx-6.0.11.jar:/home/hla/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/home/hla/.m2/repository/org/springframework/spring-aspects/6.0.11/spring-aspects-6.0.11.jar:/home/hla/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.2/spring-boot-devtools-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot/3.1.2/spring-boot-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.2/spring-boot-autoconfigure-3.1.2.jar:/home/hla/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/hla/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-configuration-processor/3.1.2/spring-boot-configuration-processor-3.1.2.jar:/home/hla/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.2/spring-boot-starter-test-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-test/3.1.2/spring-boot-test-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.2/spring-boot-test-autoconfigure-3.1.2.jar:/home/hla/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/hla/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/hla/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/hla/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/home/hla/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/home/hla/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/hla/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/hla/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/hla/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/hla/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/hla/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/hla/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/hla/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/home/hla/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/home/hla/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hla/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/home/hla/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/hla/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hla/.m2/repository/org/springframework/spring-core/6.0.11/spring-core-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-jcl/6.0.11/spring-jcl-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-test/6.0.11/spring-test-6.0.11.jar:/home/hla/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/hla/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.1.0/springdoc-openapi-starter-webmvc-ui-2.1.0.jar:/home/hla/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.1.0/springdoc-openapi-starter-webmvc-api-2.1.0.jar:/home/hla/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.1.0/springdoc-openapi-starter-common-2.1.0.jar:/home/hla/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.9/swagger-core-jakarta-2.2.9.jar:/home/hla/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.9/swagger-annotations-jakarta-2.2.9.jar:/home/hla/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.9/swagger-models-jakarta-2.2.9.jar:/home/hla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.2/jackson-dataformat-yaml-2.15.2.jar:/home/hla/.m2/repository/org/webjars/swagger-ui/4.18.2/swagger-ui-4.18.2.jar:/home/hla/.m2/repository/net/sf/jasperreports/jasperreports/6.20.4/jasperreports-6.20.4.jar:/home/hla/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/hla/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/hla/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/home/hla/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/hla/.m2/repository/org/apache/commons/commons-collections4/4.2/commons-collections4-4.2.jar:/home/hla/.m2/repository/com/github/librepdf/openpdf/1.3.30.jaspersoft.2/openpdf-1.3.30.jaspersoft.2.jar:/home/hla/.m2/repository/org/jfree/jcommon/1.0.23/jcommon-1.0.23.jar:/home/hla/.m2/repository/org/jfree/jfreechart/1.0.19/jfreechart-1.0.19.jar:/home/hla/.m2/repository/org/eclipse/jdt/ecj/3.21.0/ecj-3.21.0.jar:/home/hla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.15.2/jackson-dataformat-xml-2.15.2.jar:/home/hla/.m2/repository/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar:/home/hla/.m2/repository/com/fasterxml/woodstox/woodstox-core/6.5.1/woodstox-core-6.5.1.jar:/home/hla/.m2/repository/net/sf/jasperreports/jasperreports-functions/6.20.4/jasperreports-functions-6.20.4.jar:/home/hla/.m2/repository/net/sf/jasperreports/jasperreports-fonts/6.20.4/jasperreports-fonts-6.20.4.jar:/home/hla/.m2/repository/org/flywaydb/flyway-core/9.16.3/flyway-core-9.16.3.jar:/home/hla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-toml/2.15.2/jackson-dataformat-toml-2.15.2.jar:/home/hla/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/home/hla/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.2/spring-boot-starter-security-3.1.2.jar:/home/hla/.m2/repository/org/springframework/spring-aop/6.0.11/spring-aop-6.0.11.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-config/6.1.2/spring-security-config-6.1.2.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-core/6.1.2/spring-security-core-6.1.2.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-crypto/6.1.2/spring-security-crypto-6.1.2.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-web/6.1.2/spring-security-web-6.1.2.jar:/home/hla/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/home/hla/.m2/repository/org/json/json/20230618/json-20230618.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/3.1.2/spring-boot-starter-webflux-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/3.1.2/spring-boot-starter-reactor-netty-3.1.2.jar:/home/hla/.m2/repository/io/projectreactor/netty/reactor-netty-http/1.1.9/reactor-netty-http-1.1.9.jar:/home/hla/.m2/repository/io/netty/netty-codec-http/4.1.94.Final/netty-codec-http-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec-http2/4.1.94.Final/netty-codec-http2-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-resolver-dns/4.1.94.Final/netty-resolver-dns-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec-dns/4.1.94.Final/netty-codec-dns-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-resolver-dns-native-macos/4.1.94.Final/netty-resolver-dns-native-macos-4.1.94.Final-osx-x86_64.jar:/home/hla/.m2/repository/io/netty/netty-resolver-dns-classes-macos/4.1.94.Final/netty-resolver-dns-classes-macos-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final-linux-x86_64.jar:/home/hla/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/home/hla/.m2/repository/io/projectreactor/netty/reactor-netty-core/1.1.9/reactor-netty-core-1.1.9.jar:/home/hla/.m2/repository/io/netty/netty-handler-proxy/4.1.94.Final/netty-handler-proxy-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec-socks/4.1.94.Final/netty-codec-socks-4.1.94.Final.jar:/home/hla/.m2/repository/org/springframework/spring-webflux/6.0.11/spring-webflux-6.0.11.jar:/home/hla/.m2/repository/io/projectreactor/reactor-core/3.5.8/reactor-core-3.5.8.jar:/home/hla/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/hla/.m2/repository/org/apache/poi/poi/5.1.0/poi-5.1.0.jar:/home/hla/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/home/hla/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/hla/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/home/hla/.m2/repository/com/zaxxer/SparseBitSet/1.2/SparseBitSet-1.2.jar:/home/hla/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/hla/.m2/repository/org/apache/poi/poi-ooxml/5.1.0/poi-ooxml-5.1.0.jar:/home/hla/.m2/repository/org/apache/poi/poi-ooxml-lite/5.1.0/poi-ooxml-lite-5.1.0.jar:/home/hla/.m2/repository/org/apache/xmlbeans/xmlbeans/5.0.2/xmlbeans-5.0.2.jar:/home/hla/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/home/hla/.m2/repository/com/github/virtuald/curvesapi/1.06/curvesapi-1.06.jar:/home/hla/.m2/repository/org/freemarker/freemarker/2.3.32/freemarker-2.3.32.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.1.1/spring-boot-starter-mail-3.1.1.jar:/home/hla/.m2/repository/org/springframework/spring-context-support/6.0.11/spring-context-support-6.0.11.jar:/home/hla/.m2/repository/org/eclipse/angus/jakarta.mail/1.1.0/jakarta.mail-1.1.0.jar:/home/hla/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/hla/.m2/repository/org/testcontainers/junit-jupiter/1.19.3/junit-jupiter-1.19.3.jar:/home/hla/.m2/repository/org/testcontainers/testcontainers/1.18.3/testcontainers-1.18.3.jar:/home/hla/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/hla/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/home/hla/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/hla/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/hla/.m2/repository/com/github/docker-java/docker-java-api/3.3.0/docker-java-api-3.3.0.jar:/home/hla/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.0/docker-java-transport-zerodep-3.3.0.jar:/home/hla/.m2/repository/com/github/docker-java/docker-java-transport/3.3.0/docker-java-transport-3.3.0.jar:/home/hla/.m2/repository/net/java/dev/jna/jna/5.12.1/jna-5.12.1.jar:/home/hla/.m2/repository/org/testcontainers/postgresql/1.19.3/postgresql-1.19.3.jar:/home/hla/.m2/repository/org/testcontainers/jdbc/1.18.3/jdbc-1.18.3.jar:/home/hla/.m2/repository/org/testcontainers/database-commons/1.18.3/database-commons-1.18.3.jar:/home/hla/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:"/>
    <property name="java.vm.vendor" value="Eclipse OpenJ9"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="com.ibm.vm.bitmode" value="64"/>
    <property name="user.variant" value=""/>
    <property name="sun.font.fontmanager" value="sun.awt.X11FontManager"/>
    <property name="com.ibm.oti.vm.library.version" value="29"/>
    <property name="java.vendor.url" value="https://www.ibm.com/semeru-runtimes"/>
    <property name="user.timezone" value="Europe/Berlin"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="user.country" value="DE"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/home/hla/.jdks/semeru-17.0.9-1/lib/default:/home/hla/.jdks/semeru-17.0.9-1/lib"/>
    <property name="sun.java.command" value="/home/hla/IdeaProjects/eegfaktura-billing/target/surefire/surefirebooter-20231228002647589_3.jar /home/hla/IdeaProjects/eegfaktura-billing/target/surefire 2023-12-28T00-26-47_471-jvmRun1 surefire-20231228002647589_1tmp surefire_0-20231228002647589_2tmp"/>
    <property name="surefire.test.class.path" value="/home/hla/IdeaProjects/eegfaktura-billing/target/test-classes:/home/hla/IdeaProjects/eegfaktura-billing/target/classes:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.1.2/spring-boot-starter-web-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter/3.1.2/spring-boot-starter-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.1.2/spring-boot-starter-logging-3.1.2.jar:/home/hla/.m2/repository/ch/qos/logback/logback-classic/1.4.8/logback-classic-1.4.8.jar:/home/hla/.m2/repository/ch/qos/logback/logback-core/1.4.8/logback-core-1.4.8.jar:/home/hla/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.20.0/log4j-to-slf4j-2.20.0.jar:/home/hla/.m2/repository/org/slf4j/jul-to-slf4j/2.0.7/jul-to-slf4j-2.0.7.jar:/home/hla/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hla/.m2/repository/org/yaml/snakeyaml/1.33/snakeyaml-1.33.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.1.2/spring-boot-starter-json-3.1.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.15.2/jackson-datatype-jdk8-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.15.2/jackson-datatype-jsr310-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.15.2/jackson-module-parameter-names-2.15.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.1.2/spring-boot-starter-tomcat-3.1.2.jar:/home/hla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.11/tomcat-embed-core-10.1.11.jar:/home/hla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.11/tomcat-embed-websocket-10.1.11.jar:/home/hla/.m2/repository/org/springframework/spring-web/6.0.11/spring-web-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-beans/6.0.11/spring-beans-6.0.11.jar:/home/hla/.m2/repository/io/micrometer/micrometer-observation/1.11.2/micrometer-observation-1.11.2.jar:/home/hla/.m2/repository/io/micrometer/micrometer-commons/1.11.2/micrometer-commons-1.11.2.jar:/home/hla/.m2/repository/org/springframework/spring-webmvc/6.0.11/spring-webmvc-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-context/6.0.11/spring-context-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-expression/6.0.11/spring-expression-6.0.11.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.1.2/spring-boot-starter-validation-3.1.2.jar:/home/hla/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.11/tomcat-embed-el-10.1.11.jar:/home/hla/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.1.Final/hibernate-validator-8.0.1.Final.jar:/home/hla/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/hla/.m2/repository/org/jboss/logging/jboss-logging/3.5.3.Final/jboss-logging-3.5.3.Final.jar:/home/hla/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.1.2/spring-boot-starter-data-jpa-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.1.2/spring-boot-starter-aop-3.1.2.jar:/home/hla/.m2/repository/org/aspectj/aspectjweaver/1.9.19/aspectjweaver-1.9.19.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.1.2/spring-boot-starter-jdbc-3.1.2.jar:/home/hla/.m2/repository/com/zaxxer/HikariCP/5.0.1/HikariCP-5.0.1.jar:/home/hla/.m2/repository/org/springframework/spring-jdbc/6.0.11/spring-jdbc-6.0.11.jar:/home/hla/.m2/repository/org/hibernate/orm/hibernate-core/6.2.6.Final/hibernate-core-6.2.6.Final.jar:/home/hla/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hla/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hla/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/home/hla/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/home/hla/.m2/repository/net/bytebuddy/byte-buddy/1.14.5/byte-buddy-1.14.5.jar:/home/hla/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.3/jaxb-runtime-4.0.3.jar:/home/hla/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.3/jaxb-core-4.0.3.jar:/home/hla/.m2/repository/org/glassfish/jaxb/txw2/4.0.3/txw2-4.0.3.jar:/home/hla/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hla/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hla/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/home/hla/.m2/repository/org/springframework/data/spring-data-jpa/3.1.2/spring-data-jpa-3.1.2.jar:/home/hla/.m2/repository/org/springframework/data/spring-data-commons/3.1.2/spring-data-commons-3.1.2.jar:/home/hla/.m2/repository/org/springframework/spring-orm/6.0.11/spring-orm-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-tx/6.0.11/spring-tx-6.0.11.jar:/home/hla/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/home/hla/.m2/repository/org/springframework/spring-aspects/6.0.11/spring-aspects-6.0.11.jar:/home/hla/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar:/home/hla/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-devtools/3.1.2/spring-boot-devtools-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot/3.1.2/spring-boot-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.1.2/spring-boot-autoconfigure-3.1.2.jar:/home/hla/.m2/repository/org/postgresql/postgresql/42.6.0/postgresql-42.6.0.jar:/home/hla/.m2/repository/org/checkerframework/checker-qual/3.31.0/checker-qual-3.31.0.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-configuration-processor/3.1.2/spring-boot-configuration-processor-3.1.2.jar:/home/hla/.m2/repository/org/projectlombok/lombok/1.18.28/lombok-1.18.28.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.1.2/spring-boot-starter-test-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-test/3.1.2/spring-boot-test-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.1.2/spring-boot-test-autoconfigure-3.1.2.jar:/home/hla/.m2/repository/com/jayway/jsonpath/json-path/2.8.0/json-path-2.8.0.jar:/home/hla/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/home/hla/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.2/jakarta.activation-api-2.1.2.jar:/home/hla/.m2/repository/net/minidev/json-smart/2.4.11/json-smart-2.4.11.jar:/home/hla/.m2/repository/net/minidev/accessors-smart/2.4.11/accessors-smart-2.4.11.jar:/home/hla/.m2/repository/org/ow2/asm/asm/9.3/asm-9.3.jar:/home/hla/.m2/repository/org/assertj/assertj-core/3.24.2/assertj-core-3.24.2.jar:/home/hla/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter/5.9.3/junit-jupiter-5.9.3.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.9.3/junit-jupiter-api-5.9.3.jar:/home/hla/.m2/repository/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar:/home/hla/.m2/repository/org/junit/platform/junit-platform-commons/1.9.3/junit-platform-commons-1.9.3.jar:/home/hla/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.9.3/junit-jupiter-params-5.9.3.jar:/home/hla/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.9.3/junit-jupiter-engine-5.9.3.jar:/home/hla/.m2/repository/org/junit/platform/junit-platform-engine/1.9.3/junit-platform-engine-1.9.3.jar:/home/hla/.m2/repository/org/mockito/mockito-core/5.3.1/mockito-core-5.3.1.jar:/home/hla/.m2/repository/net/bytebuddy/byte-buddy-agent/1.14.5/byte-buddy-agent-1.14.5.jar:/home/hla/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hla/.m2/repository/org/mockito/mockito-junit-jupiter/5.3.1/mockito-junit-jupiter-5.3.1.jar:/home/hla/.m2/repository/org/skyscreamer/jsonassert/1.5.1/jsonassert-1.5.1.jar:/home/hla/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hla/.m2/repository/org/springframework/spring-core/6.0.11/spring-core-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-jcl/6.0.11/spring-jcl-6.0.11.jar:/home/hla/.m2/repository/org/springframework/spring-test/6.0.11/spring-test-6.0.11.jar:/home/hla/.m2/repository/org/xmlunit/xmlunit-core/2.9.1/xmlunit-core-2.9.1.jar:/home/hla/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.1.0/springdoc-openapi-starter-webmvc-ui-2.1.0.jar:/home/hla/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.1.0/springdoc-openapi-starter-webmvc-api-2.1.0.jar:/home/hla/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.1.0/springdoc-openapi-starter-common-2.1.0.jar:/home/hla/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.9/swagger-core-jakarta-2.2.9.jar:/home/hla/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.9/swagger-annotations-jakarta-2.2.9.jar:/home/hla/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.9/swagger-models-jakarta-2.2.9.jar:/home/hla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.15.2/jackson-dataformat-yaml-2.15.2.jar:/home/hla/.m2/repository/org/webjars/swagger-ui/4.18.2/swagger-ui-4.18.2.jar:/home/hla/.m2/repository/net/sf/jasperreports/jasperreports/6.20.4/jasperreports-6.20.4.jar:/home/hla/.m2/repository/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar:/home/hla/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/home/hla/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar:/home/hla/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/hla/.m2/repository/org/apache/commons/commons-collections4/4.2/commons-collections4-4.2.jar:/home/hla/.m2/repository/com/github/librepdf/openpdf/1.3.30.jaspersoft.2/openpdf-1.3.30.jaspersoft.2.jar:/home/hla/.m2/repository/org/jfree/jcommon/1.0.23/jcommon-1.0.23.jar:/home/hla/.m2/repository/org/jfree/jfreechart/1.0.19/jfreechart-1.0.19.jar:/home/hla/.m2/repository/org/eclipse/jdt/ecj/3.21.0/ecj-3.21.0.jar:/home/hla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.15.2/jackson-dataformat-xml-2.15.2.jar:/home/hla/.m2/repository/org/codehaus/woodstox/stax2-api/4.2.1/stax2-api-4.2.1.jar:/home/hla/.m2/repository/com/fasterxml/woodstox/woodstox-core/6.5.1/woodstox-core-6.5.1.jar:/home/hla/.m2/repository/net/sf/jasperreports/jasperreports-functions/6.20.4/jasperreports-functions-6.20.4.jar:/home/hla/.m2/repository/net/sf/jasperreports/jasperreports-fonts/6.20.4/jasperreports-fonts-6.20.4.jar:/home/hla/.m2/repository/org/flywaydb/flyway-core/9.16.3/flyway-core-9.16.3.jar:/home/hla/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-toml/2.15.2/jackson-dataformat-toml-2.15.2.jar:/home/hla/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/home/hla/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.1.2/spring-boot-starter-security-3.1.2.jar:/home/hla/.m2/repository/org/springframework/spring-aop/6.0.11/spring-aop-6.0.11.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-config/6.1.2/spring-security-config-6.1.2.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-core/6.1.2/spring-security-core-6.1.2.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-crypto/6.1.2/spring-security-crypto-6.1.2.jar:/home/hla/.m2/repository/org/springframework/security/spring-security-web/6.1.2/spring-security-web-6.1.2.jar:/home/hla/.m2/repository/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar:/home/hla/.m2/repository/org/json/json/20230618/json-20230618.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/3.1.2/spring-boot-starter-webflux-3.1.2.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/3.1.2/spring-boot-starter-reactor-netty-3.1.2.jar:/home/hla/.m2/repository/io/projectreactor/netty/reactor-netty-http/1.1.9/reactor-netty-http-1.1.9.jar:/home/hla/.m2/repository/io/netty/netty-codec-http/4.1.94.Final/netty-codec-http-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-common/4.1.94.Final/netty-common-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-buffer/4.1.94.Final/netty-buffer-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-transport/4.1.94.Final/netty-transport-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec/4.1.94.Final/netty-codec-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-handler/4.1.94.Final/netty-handler-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec-http2/4.1.94.Final/netty-codec-http2-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-resolver-dns/4.1.94.Final/netty-resolver-dns-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-resolver/4.1.94.Final/netty-resolver-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec-dns/4.1.94.Final/netty-codec-dns-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-resolver-dns-native-macos/4.1.94.Final/netty-resolver-dns-native-macos-4.1.94.Final-osx-x86_64.jar:/home/hla/.m2/repository/io/netty/netty-resolver-dns-classes-macos/4.1.94.Final/netty-resolver-dns-classes-macos-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-transport-native-epoll/4.1.94.Final/netty-transport-native-epoll-4.1.94.Final-linux-x86_64.jar:/home/hla/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.94.Final/netty-transport-native-unix-common-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-transport-classes-epoll/4.1.94.Final/netty-transport-classes-epoll-4.1.94.Final.jar:/home/hla/.m2/repository/io/projectreactor/netty/reactor-netty-core/1.1.9/reactor-netty-core-1.1.9.jar:/home/hla/.m2/repository/io/netty/netty-handler-proxy/4.1.94.Final/netty-handler-proxy-4.1.94.Final.jar:/home/hla/.m2/repository/io/netty/netty-codec-socks/4.1.94.Final/netty-codec-socks-4.1.94.Final.jar:/home/hla/.m2/repository/org/springframework/spring-webflux/6.0.11/spring-webflux-6.0.11.jar:/home/hla/.m2/repository/io/projectreactor/reactor-core/3.5.8/reactor-core-3.5.8.jar:/home/hla/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/hla/.m2/repository/org/apache/poi/poi/5.1.0/poi-5.1.0.jar:/home/hla/.m2/repository/commons-codec/commons-codec/1.15/commons-codec-1.15.jar:/home/hla/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/home/hla/.m2/repository/commons-io/commons-io/2.11.0/commons-io-2.11.0.jar:/home/hla/.m2/repository/com/zaxxer/SparseBitSet/1.2/SparseBitSet-1.2.jar:/home/hla/.m2/repository/org/apache/logging/log4j/log4j-api/2.20.0/log4j-api-2.20.0.jar:/home/hla/.m2/repository/org/apache/poi/poi-ooxml/5.1.0/poi-ooxml-5.1.0.jar:/home/hla/.m2/repository/org/apache/poi/poi-ooxml-lite/5.1.0/poi-ooxml-lite-5.1.0.jar:/home/hla/.m2/repository/org/apache/xmlbeans/xmlbeans/5.0.2/xmlbeans-5.0.2.jar:/home/hla/.m2/repository/org/apache/commons/commons-compress/1.21/commons-compress-1.21.jar:/home/hla/.m2/repository/com/github/virtuald/curvesapi/1.06/curvesapi-1.06.jar:/home/hla/.m2/repository/org/freemarker/freemarker/2.3.32/freemarker-2.3.32.jar:/home/hla/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.1.1/spring-boot-starter-mail-3.1.1.jar:/home/hla/.m2/repository/org/springframework/spring-context-support/6.0.11/spring-context-support-6.0.11.jar:/home/hla/.m2/repository/org/eclipse/angus/jakarta.mail/1.1.0/jakarta.mail-1.1.0.jar:/home/hla/.m2/repository/org/eclipse/angus/angus-activation/2.0.1/angus-activation-2.0.1.jar:/home/hla/.m2/repository/org/testcontainers/junit-jupiter/1.19.3/junit-jupiter-1.19.3.jar:/home/hla/.m2/repository/org/testcontainers/testcontainers/1.18.3/testcontainers-1.18.3.jar:/home/hla/.m2/repository/junit/junit/4.13.2/junit-4.13.2.jar:/home/hla/.m2/repository/org/hamcrest/hamcrest-core/2.2/hamcrest-core-2.2.jar:/home/hla/.m2/repository/org/rnorth/duct-tape/duct-tape/1.0.8/duct-tape-1.0.8.jar:/home/hla/.m2/repository/org/jetbrains/annotations/17.0.0/annotations-17.0.0.jar:/home/hla/.m2/repository/com/github/docker-java/docker-java-api/3.3.0/docker-java-api-3.3.0.jar:/home/hla/.m2/repository/com/github/docker-java/docker-java-transport-zerodep/3.3.0/docker-java-transport-zerodep-3.3.0.jar:/home/hla/.m2/repository/com/github/docker-java/docker-java-transport/3.3.0/docker-java-transport-3.3.0.jar:/home/hla/.m2/repository/net/java/dev/jna/jna/5.12.1/jna-5.12.1.jar:/home/hla/.m2/repository/org/testcontainers/postgresql/1.19.3/postgresql-1.19.3.jar:/home/hla/.m2/repository/org/testcontainers/jdbc/1.18.3/jdbc-1.18.3.jar:/home/hla/.m2/repository/org/testcontainers/database-commons/1.18.3/database-commons-1.18.3.jar:/home/hla/.m2/repository/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/hla"/>
    <property name="user.language" value="de"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-10-17"/>
    <property name="java.home" value="/home/hla/.jdks/semeru-17.0.9-1"/>
    <property name="ibm.signalhandling.rs" value="false"/>
    <property name="openjdk.methodhandles" value="true"/>
    <property name="file.separator" value="/"/>
    <property name="jdk.extensions.name" value="Extensions for OpenJDK for Eclipse OpenJ9"/>
    <property name="basedir" value="/home/hla/IdeaProjects/eegfaktura-billing"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.compiler" value="j9jit29"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="com.ibm.util.extralibs.properties" value=""/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.awt.headless" value="true"/>
    <property name="com.ibm.oti.configuration" value="scar"/>
    <property name="java.awt.fonts" value=""/>
    <property name="surefire.real.class.path" value="/home/hla/IdeaProjects/eegfaktura-billing/target/surefire/surefirebooter-20231228002647589_3.jar"/>
    <property name="com.ibm.oti.shared.enabled" value="false"/>
    <property name="com.ibm.oti.vm.bootstrap.library.path" value="/home/hla/.jdks/semeru-17.0.9-1/lib/default:/home/hla/.jdks/semeru-17.0.9-1/lib"/>
    <property name="com.ibm.cpu.endian" value="little"/>
    <property name="java.fullversion" value="17.0.9+9&#10;JRE 17 Linux amd64-64-Bit Compressed References 20231017_614 (JIT enabled, AOT enabled)&#10;OpenJ9   - 461bf3c70&#10;OMR      - 5eee6ad9d&#10;JCL      - 3699725139c based on jdk-17.0.9+9"/>
    <property name="java.runtime.version" value="17.0.9+9"/>
    <property name="user.name" value="hla"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.2.0-39-generic"/>
    <property name="java.runtime.name" value="IBM Semeru Runtime Open Edition"/>
    <property name="ibm.signalhandling.sigint" value="true"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="org.eclipse.openj9.criu.isCRIUCapable" value="true"/>
    <property name="java.vm.name" value="Eclipse OpenJ9 VM"/>
    <property name="java.vendor.version" value="17.0.9.0"/>
    <property name="ibm.signalhandling.sigchain" value="true"/>
    <property name="localRepository" value="/home/hla/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/ibmruntimes/Semeru-Runtimes/issues"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="idea.version" value="2023.3.2"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.9"/>
    <property name="com.ibm.system.agent.path" value="/home/hla/.jdks/semeru-17.0.9-1/lib"/>
    <property name="user.dir" value="/home/hla/IdeaProjects/eegfaktura-billing"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="32199"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="os.encoding" value="UTF-8"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/home/hla/.jdks/semeru-17.0.9-1/lib/default:/home/hla/.jdks/semeru-17.0.9-1/lib:/usr/lib64:/usr/lib"/>
    <property name="java.vendor" value="IBM Corporation"/>
    <property name="java.vm.info" value="JRE 17 Linux amd64-64-Bit Compressed References 20231017_614 (JIT enabled, AOT enabled)&#10;OpenJ9   - 461bf3c70&#10;OMR      - 5eee6ad9d&#10;JCL      - 3699725139c based on jdk-17.0.9+9"/>
    <property name="java.vm.version" value="openj9-0.41.0"/>
    <property name="com.ibm.jcl.checkClassPath" value=""/>
    <property name="ibm.system.encoding" value="UTF-8"/>
    <property name="java.lang.invoke.VarHandle.VAR_HANDLE_GUARDS" value="false"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="testBillingDocumentNumberGenerator_YearMix" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="1.442">
    <system-out><![CDATA[00:26:49.142 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests]: EegfakturaBillingApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
00:26:49.271 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration org.vfeeg.eegfaktura.billing.EegfakturaBillingApplication for test class org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests
00:26:49.480 [main] INFO org.testcontainers.utility.ImageNameSubstitutor -- Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
00:26:49.807 [main] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy -- Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
00:26:50.115 [main] INFO org.testcontainers.dockerclient.DockerClientProviderStrategy -- Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
00:26:50.117 [main] INFO org.testcontainers.DockerClientFactory -- Docker host IP address is localhost
00:26:50.140 [main] INFO org.testcontainers.DockerClientFactory -- Connected to docker: 
  Server Version: 23.0.6
  API Version: 1.42
  Operating System: Alpine Linux v3.18
  Total Memory: 5937 MB
00:26:50.191 [main] INFO tc.testcontainers/ryuk:0.5.1 -- Creating container for image: testcontainers/ryuk:0.5.1
00:26:50.225 [main] INFO org.testcontainers.utility.RegistryAuthLocator -- Credential helper/store (docker-credential-pass) does not have credentials for https://index.docker.io/v1/
00:26:50.352 [main] INFO tc.testcontainers/ryuk:0.5.1 -- Container testcontainers/ryuk:0.5.1 is starting: a915e3945f12d9a8427bcbda7a1f2d7b505a086022c330d20da7120876ec7927
00:26:50.903 [main] INFO tc.testcontainers/ryuk:0.5.1 -- Container testcontainers/ryuk:0.5.1 started in PT0.752653992S
00:26:50.907 [testcontainers-ryuk] WARN org.testcontainers.utility.RyukResourceReaper -- Can not connect to Ryuk at localhost:32798
java.net.ConnectException: Verbindungsaufbau abgelehnt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.testcontainers.utility.RyukResourceReaper.lambda$null$0(RyukResourceReaper.java:92)
	at org.rnorth.ducttape.ratelimits.RateLimiter.doWhenReady(RateLimiter.java:27)
	at org.testcontainers.utility.RyukResourceReaper.lambda$maybeStart$1(RyukResourceReaper.java:88)
	at java.base/java.lang.Thread.run(Thread.java:857)
00:26:51.161 [testcontainers-ryuk] WARN org.testcontainers.utility.RyukResourceReaper -- Can not connect to Ryuk at localhost:32798
java.net.ConnectException: Verbindungsaufbau abgelehnt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.testcontainers.utility.RyukResourceReaper.lambda$null$0(RyukResourceReaper.java:92)
	at org.rnorth.ducttape.ratelimits.RateLimiter.doWhenReady(RateLimiter.java:27)
	at org.testcontainers.utility.RyukResourceReaper.lambda$maybeStart$1(RyukResourceReaper.java:88)
	at java.base/java.lang.Thread.run(Thread.java:857)
00:26:51.413 [testcontainers-ryuk] WARN org.testcontainers.utility.RyukResourceReaper -- Can not connect to Ryuk at localhost:32798
java.net.ConnectException: Verbindungsaufbau abgelehnt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.testcontainers.utility.RyukResourceReaper.lambda$null$0(RyukResourceReaper.java:92)
	at org.rnorth.ducttape.ratelimits.RateLimiter.doWhenReady(RateLimiter.java:27)
	at org.testcontainers.utility.RyukResourceReaper.lambda$maybeStart$1(RyukResourceReaper.java:88)
	at java.base/java.lang.Thread.run(Thread.java:857)
00:26:51.664 [testcontainers-ryuk] WARN org.testcontainers.utility.RyukResourceReaper -- Can not connect to Ryuk at localhost:32798
java.net.ConnectException: Verbindungsaufbau abgelehnt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.testcontainers.utility.RyukResourceReaper.lambda$null$0(RyukResourceReaper.java:92)
	at org.rnorth.ducttape.ratelimits.RateLimiter.doWhenReady(RateLimiter.java:27)
	at org.testcontainers.utility.RyukResourceReaper.lambda$maybeStart$1(RyukResourceReaper.java:88)
	at java.base/java.lang.Thread.run(Thread.java:857)
00:26:51.916 [testcontainers-ryuk] WARN org.testcontainers.utility.RyukResourceReaper -- Can not connect to Ryuk at localhost:32798
java.net.ConnectException: Verbindungsaufbau abgelehnt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.testcontainers.utility.RyukResourceReaper.lambda$null$0(RyukResourceReaper.java:92)
	at org.rnorth.ducttape.ratelimits.RateLimiter.doWhenReady(RateLimiter.java:27)
	at org.testcontainers.utility.RyukResourceReaper.lambda$maybeStart$1(RyukResourceReaper.java:88)
	at java.base/java.lang.Thread.run(Thread.java:857)
00:26:52.167 [testcontainers-ryuk] WARN org.testcontainers.utility.RyukResourceReaper -- Can not connect to Ryuk at localhost:32798
java.net.ConnectException: Verbindungsaufbau abgelehnt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.testcontainers.utility.RyukResourceReaper.lambda$null$0(RyukResourceReaper.java:92)
	at org.rnorth.ducttape.ratelimits.RateLimiter.doWhenReady(RateLimiter.java:27)
	at org.testcontainers.utility.RyukResourceReaper.lambda$maybeStart$1(RyukResourceReaper.java:88)
	at java.base/java.lang.Thread.run(Thread.java:857)
00:26:52.419 [testcontainers-ryuk] WARN org.testcontainers.utility.RyukResourceReaper -- Can not connect to Ryuk at localhost:32798
java.net.ConnectException: Verbindungsaufbau abgelehnt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.testcontainers.utility.RyukResourceReaper.lambda$null$0(RyukResourceReaper.java:92)
	at org.rnorth.ducttape.ratelimits.RateLimiter.doWhenReady(RateLimiter.java:27)
	at org.testcontainers.utility.RyukResourceReaper.lambda$maybeStart$1(RyukResourceReaper.java:88)
	at java.base/java.lang.Thread.run(Thread.java:857)
00:26:52.676 [main] INFO org.testcontainers.utility.RyukResourceReaper -- Ryuk started - will monitor and terminate Testcontainers containers on JVM exit
00:26:52.676 [main] INFO org.testcontainers.DockerClientFactory -- Checking the system...
00:26:52.678 [main] INFO org.testcontainers.DockerClientFactory -- ✔︎ Docker server version should be at least 1.6.0
00:26:52.678 [main] INFO tc.postgres:15-alpine -- Creating container for image: postgres:15-alpine
00:26:52.679 [main] WARN tc.postgres:15-alpine -- Reuse was requested but the environment does not support the reuse of containers
To enable reuse of containers, you must set 'testcontainers.reuse.enable=true' in a file located at /home/hla/.testcontainers.properties
00:26:52.707 [main] INFO tc.postgres:15-alpine -- Container postgres:15-alpine is starting: 258a276d31416fe2119cd6502f2f9c67001c3614b41c9d27fd4a6dbe10ae99a3
00:26:54.889 [main] INFO tc.postgres:15-alpine -- Container postgres:15-alpine started in PT2.21092721S
00:26:54.890 [main] INFO tc.postgres:15-alpine -- Container is started (JDBC URL: jdbc:postgresql://localhost:32799/test?loggerLevel=OFF)

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.1.2)

2023-12-28T00:26:55.398+01:00  WARN 32199 --- [           main] ory$DuplicateJsonObjectContextCustomizer : 

Found multiple occurrences of org.json.JSONObject on the class path:

	jar:file:/home/hla/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
	jar:file:/home/hla/.m2/repository/org/json/json/20230618/json-20230618.jar!/org/json/JSONObject.class

You may wish to exclude one of them to ensure predictable runtime behavior

2023-12-28T00:26:55.466+01:00  INFO 32199 --- [           main] .v.e.b.EegfakturaBillingApplicationTests : Starting EegfakturaBillingApplicationTests using Java 17.0.9 with PID 32199 (started by hla in /home/hla/IdeaProjects/eegfaktura-billing)
2023-12-28T00:26:55.469+01:00  INFO 32199 --- [           main] .v.e.b.EegfakturaBillingApplicationTests : No active profile set, falling back to 1 default profile: "default"
2023-12-28T00:26:56.531+01:00  INFO 32199 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-12-28T00:26:56.697+01:00  INFO 32199 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 153 ms. Found 8 JPA repository interfaces.
2023-12-28T00:26:57.907+01:00  INFO 32199 --- [           main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 9.16.3 by Redgate
2023-12-28T00:26:57.908+01:00  INFO 32199 --- [           main] o.f.c.internal.license.VersionPrinter    : See release notes here: https://rd.gt/416ObMi
2023-12-28T00:26:57.908+01:00  INFO 32199 --- [           main] o.f.c.internal.license.VersionPrinter    : 
2023-12-28T00:26:57.912+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/callback' ...
2023-12-28T00:26:57.912+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/callback using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@bc876c2 ...
2023-12-28T00:26:57.912+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Unable to resolve location classpath:db/callback.
2023-12-28T00:26:57.912+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classpath resources at 'classpath:db/migration' ...
2023-12-28T00:26:57.912+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Determining location urls for classpath:db/migration using ClassLoader jdk.internal.loader.ClassLoaders$AppClassLoader@bc876c2 ...
2023-12-28T00:26:57.913+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning URL: file:/home/hla/IdeaProjects/eegfaktura-billing/target/classes/db/migration
2023-12-28T00:26:57.914+01:00 DEBUG 32199 --- [           main] i.s.c.FileSystemClassPathLocationScanner : Scanning starting at classpath root in filesystem: /home/hla/IdeaProjects/eegfaktura-billing/target/classes/
2023-12-28T00:26:57.914+01:00 DEBUG 32199 --- [           main] i.s.c.FileSystemClassPathLocationScanner : Scanning for resources in path: /home/hla/IdeaProjects/eegfaktura-billing/target/classes/db/migration (db/migration)
2023-12-28T00:26:57.916+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1_0__init_schema.sql
2023-12-28T00:26:57.916+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1_1__migration.sql
2023-12-28T00:26:57.916+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1_2__migration.sql
2023-12-28T00:26:57.916+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1_3__migration.sql
2023-12-28T00:26:57.916+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1_4__migration.sql
2023-12-28T00:26:57.916+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Found resource: db/migration/V1_5__migration.sql
2023-12-28T00:26:57.917+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.classpath.ClassPathScanner     : Scanning for classes at classpath:db/migration
2023-12-28T00:26:57.920+01:00 DEBUG 32199 --- [           main] o.f.c.i.resource.ResourceNameValidator   : Validating V1_2__migration.sql
2023-12-28T00:26:57.921+01:00 DEBUG 32199 --- [           main] o.f.c.i.resource.ResourceNameValidator   : Validating V1_0__init_schema.sql
2023-12-28T00:26:57.921+01:00 DEBUG 32199 --- [           main] o.f.c.i.resource.ResourceNameValidator   : Validating V1_1__migration.sql
2023-12-28T00:26:57.921+01:00 DEBUG 32199 --- [           main] o.f.c.i.resource.ResourceNameValidator   : Validating V1_4__migration.sql
2023-12-28T00:26:57.922+01:00 DEBUG 32199 --- [           main] o.f.c.i.resource.ResourceNameValidator   : Validating V1_5__migration.sql
2023-12-28T00:26:57.922+01:00 DEBUG 32199 --- [           main] o.f.c.i.resource.ResourceNameValidator   : Validating V1_3__migration.sql
2023-12-28T00:26:57.924+01:00  INFO 32199 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2023-12-28T00:26:58.072+01:00  INFO 32199 --- [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@49cbccf0
2023-12-28T00:26:58.074+01:00  INFO 32199 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2023-12-28T00:26:58.091+01:00  INFO 32199 --- [           main] o.f.c.i.database.base.BaseDatabaseType   : Database: jdbc:postgresql://localhost:32799/test (PostgreSQL 15.5)
2023-12-28T00:26:58.092+01:00 DEBUG 32199 --- [           main] o.f.c.i.database.base.BaseDatabaseType   : Driver  : PostgreSQL JDBC Driver 42.6.0
2023-12-28T00:26:58.094+01:00 DEBUG 32199 --- [           main] org.flywaydb.core.FlywayExecutor         : DDL Transactions Supported: true
2023-12-28T00:26:58.095+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.SchemaHistoryFactory           : Schemas: 
2023-12-28T00:26:58.096+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.SchemaHistoryFactory           : Default schema: null
2023-12-28T00:26:58.108+01:00 DEBUG 32199 --- [           main] o.f.c.i.c.SqlScriptCallbackFactory       : Scanning for SQL callbacks ...
2023-12-28T00:26:58.125+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbValidate     : Validating migrations ...
2023-12-28T00:26:58.138+01:00 DEBUG 32199 --- [           main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1_2__migration.sql (filename: V1_2__migration.sql)
2023-12-28T00:26:58.138+01:00 DEBUG 32199 --- [           main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1_0__init_schema.sql (filename: V1_0__init_schema.sql)
2023-12-28T00:26:58.139+01:00 DEBUG 32199 --- [           main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1_1__migration.sql (filename: V1_1__migration.sql)
2023-12-28T00:26:58.139+01:00 DEBUG 32199 --- [           main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1_4__migration.sql (filename: V1_4__migration.sql)
2023-12-28T00:26:58.139+01:00 DEBUG 32199 --- [           main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1_5__migration.sql (filename: V1_5__migration.sql)
2023-12-28T00:26:58.139+01:00 DEBUG 32199 --- [           main] o.f.core.internal.scanner.Scanner        : Filtering out resource: db/migration/V1_3__migration.sql (filename: V1_3__migration.sql)
2023-12-28T00:26:58.146+01:00  INFO 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Schema history table "public"."flyway_schema_history" does not exist yet
2023-12-28T00:26:58.151+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbValidate     : Successfully validated 6 migrations (execution time 00:00.024s)
2023-12-28T00:26:58.156+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbSchemas      : Skipping creation of existing schema: "public"
2023-12-28T00:26:58.178+01:00  INFO 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table "public"."flyway_schema_history" ...
2023-12-28T00:26:58.183+01:00 DEBUG 32199 --- [           main] o.flywaydb.core.internal.parser.Parser   : Parsing  ...
2023-12-28T00:26:58.197+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 1: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)
2023-12-28T00:26:58.198+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 13: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")
2023-12-28T00:26:58.199+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 14: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")
2023-12-28T00:26:58.200+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: CREATE TABLE "public"."flyway_schema_history" (
    "installed_rank" INT NOT NULL,
    "version" VARCHAR(50),
    "description" VARCHAR(200) NOT NULL,
    "type" VARCHAR(20) NOT NULL,
    "script" VARCHAR(1000) NOT NULL,
    "checksum" INTEGER,
    "installed_by" VARCHAR(100) NOT NULL,
    "installed_on" TIMESTAMP NOT NULL DEFAULT now(),
    "execution_time" INTEGER NOT NULL,
    "success" BOOLEAN NOT NULL
)
2023-12-28T00:26:58.209+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.210+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: ALTER TABLE "public"."flyway_schema_history" ADD CONSTRAINT "flyway_schema_history_pk" PRIMARY KEY ("installed_rank")
2023-12-28T00:26:58.215+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.215+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: CREATE INDEX "flyway_schema_history_s_idx" ON "public"."flyway_schema_history" ("success")
2023-12-28T00:26:58.218+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.219+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Created Schema History table "public"."flyway_schema_history"
2023-12-28T00:26:58.243+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Current version of schema "public": << Empty Schema >>
2023-12-28T00:26:58.243+01:00 DEBUG 32199 --- [           main] o.flywaydb.core.internal.parser.Parser   : Parsing V1_0__init_schema.sql ...
2023-12-28T00:26:58.260+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 1: create table billing_document (id uuid not null, after_items_text varchar, before_items_text varchar, billing_document_type smallint, clearing_period_identifier varchar, clearing_period_type varchar, date_created timestamp(6) not null, document_date date, document_number varchar, gross_amount_in_euro numeric(38,2), issuer_address_line1 varchar, issuer_address_line2 varchar, issuer_address_line3 varchar, issuer_bankiban varchar, issuer_bank_name varchar, issuer_company_register_number varchar, issuer_mail varchar, issuer_name varchar, issuer_phone varchar, issuer_tax_id varchar, issuer_vat_id varchar, issuer_website varchar, last_updated timestamp(6) not null, net_amount_in_euro numeric(38,2), participant_id varchar, recipient_address_line1 varchar, recipient_address_line2 varchar, recipient_address_line3 varchar, recipient_name varchar, status varchar, tenant_id varchar, terms_text varchar, vat1percent numeric(38,2), vat1sum_in_euro numeric(38,2), vat2percent numeric(38,2), vat2sum_in_euro numeric(38,2), billing_run_id uuid, primary key (id))
2023-12-28T00:26:58.264+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 2: create table billing_document_item (id uuid not null, amount numeric(38,2), clearing_period_identifier varchar, clearing_period_type varchar, date_created timestamp(6) not null, discount_percent numeric(38,2), gross_value numeric(38,2), last_updated timestamp(6) not null, net_value numeric(38,2), price_per_unit numeric(38,2), tenant_id varchar, text varchar, unit varchar, vat_percent numeric(38,2), vat_value_in_euro numeric(38,2), billing_document_id uuid, primary key (id))
2023-12-28T00:26:58.269+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 3: create table billing_document_number (id uuid not null, date_created timestamp(6) not null, document_number varchar, document_type smallint, eec_prefix varchar, last_updated timestamp(6) not null, sequence_number bigint, tenant_id varchar, year integer, primary key (id))
2023-12-28T00:26:58.272+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 4: create table billing_run (id uuid not null, billing_period_identifier varchar, billing_period_type varchar, date_created timestamp(6) not null, last_updated timestamp(6) not null, mail_status varchar, mail_status_date_time timestamp(6), number_of_credit_notes integer, number_of_invoices integer, run_status smallint, run_status_date_time timestamp(6), sepa_status varchar, sepa_status_date_time timestamp(6), tenant_id varchar, primary key (id))
2023-12-28T00:26:58.275+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 5: create table file (id uuid not null, date_created timestamp(6) not null, file_data_id uuid, last_updated timestamp(6) not null, mime_type varchar, name varchar, tenant_id varchar, billing_document_id uuid, primary key (id))
2023-12-28T00:26:58.277+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 6: create table file_data (id uuid not null, data oid, date_created timestamp(6) not null, last_updated timestamp(6) not null, mime_type varchar, name varchar, tenant_id varchar, primary key (id))
2023-12-28T00:26:58.279+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 7: alter table if exists billing_document_number add constraint UKhbmeftd1x7fdlqtqqg2v20aev unique (tenant_id, document_number)
2023-12-28T00:26:58.283+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 8: alter table if exists billing_document add constraint FK6gouorockuin30j66lev4xmky foreign key (billing_run_id) references billing_run
2023-12-28T00:26:58.286+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 9: alter table if exists billing_document_item add constraint FKa9p699hipxo9cn082v5nn8r97 foreign key (billing_document_id) references billing_document
2023-12-28T00:26:58.286+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 10: alter table if exists file add constraint FKjqt0uro12lskas3jc9lvtbxf0 foreign key (billing_document_id) references billing_document
2023-12-28T00:26:58.289+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Starting migration of schema "public" to version "1.0 - init schema" ...
2023-12-28T00:26:58.293+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "public" to version "1.0 - init schema"
2023-12-28T00:26:58.296+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: create table billing_document (id uuid not null, after_items_text varchar, before_items_text varchar, billing_document_type smallint, clearing_period_identifier varchar, clearing_period_type varchar, date_created timestamp(6) not null, document_date date, document_number varchar, gross_amount_in_euro numeric(38,2), issuer_address_line1 varchar, issuer_address_line2 varchar, issuer_address_line3 varchar, issuer_bankiban varchar, issuer_bank_name varchar, issuer_company_register_number varchar, issuer_mail varchar, issuer_name varchar, issuer_phone varchar, issuer_tax_id varchar, issuer_vat_id varchar, issuer_website varchar, last_updated timestamp(6) not null, net_amount_in_euro numeric(38,2), participant_id varchar, recipient_address_line1 varchar, recipient_address_line2 varchar, recipient_address_line3 varchar, recipient_name varchar, status varchar, tenant_id varchar, terms_text varchar, vat1percent numeric(38,2), vat1sum_in_euro numeric(38,2), vat2percent numeric(38,2), vat2sum_in_euro numeric(38,2), billing_run_id uuid, primary key (id))
2023-12-28T00:26:58.306+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.306+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: create table billing_document_item (id uuid not null, amount numeric(38,2), clearing_period_identifier varchar, clearing_period_type varchar, date_created timestamp(6) not null, discount_percent numeric(38,2), gross_value numeric(38,2), last_updated timestamp(6) not null, net_value numeric(38,2), price_per_unit numeric(38,2), tenant_id varchar, text varchar, unit varchar, vat_percent numeric(38,2), vat_value_in_euro numeric(38,2), billing_document_id uuid, primary key (id))
2023-12-28T00:26:58.313+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.314+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: create table billing_document_number (id uuid not null, date_created timestamp(6) not null, document_number varchar, document_type smallint, eec_prefix varchar, last_updated timestamp(6) not null, sequence_number bigint, tenant_id varchar, year integer, primary key (id))
2023-12-28T00:26:58.321+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.321+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: create table billing_run (id uuid not null, billing_period_identifier varchar, billing_period_type varchar, date_created timestamp(6) not null, last_updated timestamp(6) not null, mail_status varchar, mail_status_date_time timestamp(6), number_of_credit_notes integer, number_of_invoices integer, run_status smallint, run_status_date_time timestamp(6), sepa_status varchar, sepa_status_date_time timestamp(6), tenant_id varchar, primary key (id))
2023-12-28T00:26:58.326+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.326+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: create table file (id uuid not null, date_created timestamp(6) not null, file_data_id uuid, last_updated timestamp(6) not null, mime_type varchar, name varchar, tenant_id varchar, billing_document_id uuid, primary key (id))
2023-12-28T00:26:58.330+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.331+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: create table file_data (id uuid not null, data oid, date_created timestamp(6) not null, last_updated timestamp(6) not null, mime_type varchar, name varchar, tenant_id varchar, primary key (id))
2023-12-28T00:26:58.335+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.335+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document_number add constraint UKhbmeftd1x7fdlqtqqg2v20aev unique (tenant_id, document_number)
2023-12-28T00:26:58.339+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.340+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add constraint FK6gouorockuin30j66lev4xmky foreign key (billing_run_id) references billing_run
2023-12-28T00:26:58.348+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.349+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document_item add constraint FKa9p699hipxo9cn082v5nn8r97 foreign key (billing_document_id) references billing_document
2023-12-28T00:26:58.353+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.353+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists file add constraint FKjqt0uro12lskas3jc9lvtbxf0 foreign key (billing_document_id) references billing_document
2023-12-28T00:26:58.357+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.357+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully completed migration of schema "public" to version "1.0 - init schema"
2023-12-28T00:26:58.366+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Schema History table "public"."flyway_schema_history" successfully updated to reflect changes
2023-12-28T00:26:58.378+01:00 DEBUG 32199 --- [           main] o.flywaydb.core.internal.parser.Parser   : Parsing V1_1__migration.sql ...
2023-12-28T00:26:58.380+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 1: alter table if exists billing_document add column recipient_participant_number varchar
2023-12-28T00:26:58.380+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 2: alter table if exists billing_document add column footer_text varchar
2023-12-28T00:26:58.381+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 3: alter table if exists file rename to billing_document_file
2023-12-28T00:26:58.383+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 4: alter table if exists billing_document_number rename column eec_prefix to prefix
2023-12-28T00:26:58.383+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 5: alter table if exists billing_document_item add column metering_point_id varchar
2023-12-28T00:26:58.386+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 6: alter table if exists billing_document_item add column metering_point_type smallint
2023-12-28T00:26:58.387+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 8: create table billing_config (id UUID not null, tenant_id varchar not null, header_image_file_data_id UUID, footer_image_file_data_id UUID, before_items_text_invoice varchar, before_items_text_credit_note varchar, before_items_text_info varchar, after_items_text_invoice varchar, after_items_text_credit_note varchar, after_items_text_info varchar, terms_text_invoice varchar, terms_text_credit_note varchar, terms_text_info varchar, footer_text varchar, custom_template_file_data_id UUID, document_number_sequence_length integer, invoice_number_prefix varchar, invoice_number_start bigint, credit_note_number_prefix varchar, credit_note_number_start bigint,  date_created timestamp(6) not null, last_updated timestamp(6) not null, primary key (id))
2023-12-28T00:26:58.388+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 9: alter table if exists billing_config add constraint FK01H3XWF8N8BPER0YJ2P3EP0KX8 foreign key (header_image_file_data_id) references file_data(id)
2023-12-28T00:26:58.389+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 10: alter table if exists billing_config add constraint FK01H3XWJA21V3GWXAKVB9C34T7D foreign key (footer_image_file_data_id) references file_data(id)
2023-12-28T00:26:58.389+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 11: alter table if exists billing_config add constraint FK01H3XWKC7THK17BQE07R9JXKWH foreign key (custom_template_file_data_id) references file_data(id)
2023-12-28T00:26:58.389+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 12: alter table if exists billing_config add constraint UK01H3XWRJW9XSMPTE9Y7AGQNKG6 unique (tenant_id)
2023-12-28T00:26:58.390+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Starting migration of schema "public" to version "1.1 - migration" ...
2023-12-28T00:26:58.394+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "public" to version "1.1 - migration"
2023-12-28T00:26:58.396+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column recipient_participant_number varchar
2023-12-28T00:26:58.398+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.398+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column footer_text varchar
2023-12-28T00:26:58.400+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.400+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists file rename to billing_document_file
2023-12-28T00:26:58.402+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.402+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document_number rename column eec_prefix to prefix
2023-12-28T00:26:58.404+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.404+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document_item add column metering_point_id varchar
2023-12-28T00:26:58.406+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.406+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document_item add column metering_point_type smallint
2023-12-28T00:26:58.408+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.408+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: create table billing_config (id UUID not null, tenant_id varchar not null, header_image_file_data_id UUID, footer_image_file_data_id UUID, before_items_text_invoice varchar, before_items_text_credit_note varchar, before_items_text_info varchar, after_items_text_invoice varchar, after_items_text_credit_note varchar, after_items_text_info varchar, terms_text_invoice varchar, terms_text_credit_note varchar, terms_text_info varchar, footer_text varchar, custom_template_file_data_id UUID, document_number_sequence_length integer, invoice_number_prefix varchar, invoice_number_start bigint, credit_note_number_prefix varchar, credit_note_number_start bigint,  date_created timestamp(6) not null, last_updated timestamp(6) not null, primary key (id))
2023-12-28T00:26:58.416+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.416+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_config add constraint FK01H3XWF8N8BPER0YJ2P3EP0KX8 foreign key (header_image_file_data_id) references file_data(id)
2023-12-28T00:26:58.421+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.422+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_config add constraint FK01H3XWJA21V3GWXAKVB9C34T7D foreign key (footer_image_file_data_id) references file_data(id)
2023-12-28T00:26:58.425+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.425+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_config add constraint FK01H3XWKC7THK17BQE07R9JXKWH foreign key (custom_template_file_data_id) references file_data(id)
2023-12-28T00:26:58.429+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.430+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_config add constraint UK01H3XWRJW9XSMPTE9Y7AGQNKG6 unique (tenant_id)
2023-12-28T00:26:58.434+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.435+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully completed migration of schema "public" to version "1.1 - migration"
2023-12-28T00:26:58.443+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Schema History table "public"."flyway_schema_history" successfully updated to reflect changes
2023-12-28T00:26:58.454+01:00 DEBUG 32199 --- [           main] o.flywaydb.core.internal.parser.Parser   : Parsing V1_2__migration.sql ...
2023-12-28T00:26:58.456+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 1: alter table if exists billing_document add column recipient_bank_name varchar
2023-12-28T00:26:58.457+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 2: alter table if exists billing_document add column recipient_bank_iban varchar
2023-12-28T00:26:58.458+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 3: alter table if exists billing_document add column recipient_bank_owner varchar
2023-12-28T00:26:58.458+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 4: alter table if exists billing_document add column recipient_sepa_mandate_reference varchar
2023-12-28T00:26:58.458+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 5: alter table if exists billing_document add column issuer_bank_owner varchar
2023-12-28T00:26:58.459+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 6: alter table if exists billing_document add column recipient_email varchar
2023-12-28T00:26:58.459+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Starting migration of schema "public" to version "1.2 - migration" ...
2023-12-28T00:26:58.463+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "public" to version "1.2 - migration"
2023-12-28T00:26:58.464+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column recipient_bank_name varchar
2023-12-28T00:26:58.467+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.467+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column recipient_bank_iban varchar
2023-12-28T00:26:58.470+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.470+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column recipient_bank_owner varchar
2023-12-28T00:26:58.473+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.473+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column recipient_sepa_mandate_reference varchar
2023-12-28T00:26:58.475+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.476+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column issuer_bank_owner varchar
2023-12-28T00:26:58.478+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.478+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column recipient_email varchar
2023-12-28T00:26:58.482+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.482+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully completed migration of schema "public" to version "1.2 - migration"
2023-12-28T00:26:58.491+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Schema History table "public"."flyway_schema_history" successfully updated to reflect changes
2023-12-28T00:26:58.501+01:00 DEBUG 32199 --- [           main] o.flywaydb.core.internal.parser.Parser   : Parsing V1_3__migration.sql ...
2023-12-28T00:26:58.503+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 1: alter table if exists billing_run rename column billing_period_type to clearing_period_type
2023-12-28T00:26:58.504+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 2: alter table if exists billing_run rename column billing_period_identifier to clearing_period_identifier
2023-12-28T00:26:58.504+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Starting migration of schema "public" to version "1.3 - migration" ...
2023-12-28T00:26:58.507+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "public" to version "1.3 - migration"
2023-12-28T00:26:58.510+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_run rename column billing_period_type to clearing_period_type
2023-12-28T00:26:58.512+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.512+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_run rename column billing_period_identifier to clearing_period_identifier
2023-12-28T00:26:58.513+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.514+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully completed migration of schema "public" to version "1.3 - migration"
2023-12-28T00:26:58.519+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Schema History table "public"."flyway_schema_history" successfully updated to reflect changes
2023-12-28T00:26:58.525+01:00 DEBUG 32199 --- [           main] o.flywaydb.core.internal.parser.Parser   : Parsing V1_4__migration.sql ...
2023-12-28T00:26:58.527+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 1: alter table if exists billing_document_item add column ppu_unit varchar
2023-12-28T00:26:58.527+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Starting migration of schema "public" to version "1.4 - migration" ...
2023-12-28T00:26:58.530+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "public" to version "1.4 - migration"
2023-12-28T00:26:58.531+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document_item add column ppu_unit varchar
2023-12-28T00:26:58.533+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.533+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully completed migration of schema "public" to version "1.4 - migration"
2023-12-28T00:26:58.538+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Schema History table "public"."flyway_schema_history" successfully updated to reflect changes
2023-12-28T00:26:58.544+01:00 DEBUG 32199 --- [           main] o.flywaydb.core.internal.parser.Parser   : Parsing V1_5__migration.sql ...
2023-12-28T00:26:58.546+01:00 DEBUG 32199 --- [           main] o.f.c.i.sqlscript.ParserSqlScript        : Found statement at line 1: alter table if exists billing_document add column recipient_sepa_mandate_issue_date date
2023-12-28T00:26:58.546+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Starting migration of schema "public" to version "1.5 - migration" ...
2023-12-28T00:26:58.549+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "public" to version "1.5 - migration"
2023-12-28T00:26:58.550+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : Executing SQL: alter table if exists billing_document add column recipient_sepa_mandate_issue_date date
2023-12-28T00:26:58.551+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.DefaultSqlScriptExecutor       : 0 rows affected
2023-12-28T00:26:58.552+01:00 DEBUG 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully completed migration of schema "public" to version "1.5 - migration"
2023-12-28T00:26:58.556+01:00 DEBUG 32199 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Schema History table "public"."flyway_schema_history" successfully updated to reflect changes
2023-12-28T00:26:58.562+01:00  INFO 32199 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully applied 6 migrations to schema "public", now at version v1.5 (execution time 00:00.330s)
2023-12-28T00:26:58.574+01:00 DEBUG 32199 --- [           main] org.flywaydb.core.FlywayExecutor         : Memory usage: 29 of 36M
2023-12-28T00:26:58.688+01:00  INFO 32199 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-12-28T00:26:58.742+01:00  INFO 32199 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.2.6.Final
2023-12-28T00:26:58.744+01:00  INFO 32199 --- [           main] org.hibernate.cfg.Environment            : HHH000406: Using bytecode reflection optimizer
2023-12-28T00:26:58.877+01:00  INFO 32199 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-12-28T00:26:59.021+01:00  INFO 32199 --- [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2023-12-28T00:26:59.429+01:00  INFO 32199 --- [           main] o.h.b.i.BytecodeProviderInitiator        : HHH000021: Bytecode provider name : bytebuddy
2023-12-28T00:27:00.509+01:00  INFO 32199 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-12-28T00:27:00.513+01:00  INFO 32199 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-12-28T00:27:01.000+01:00  INFO 32199 --- [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2023-12-28T00:27:02.639+01:00  WARN 32199 --- [           main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 43f88387-184b-44e8-a685-4f0d616c21a1

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2023-12-28T00:27:02.774+01:00  INFO 32199 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@356aa681, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@bf857d68, org.springframework.security.web.context.SecurityContextHolderFilter@dd1a7b78, org.springframework.security.web.header.HeaderWriterFilter@8f0451a0, org.springframework.security.web.authentication.logout.LogoutFilter@a2db647a, org.vfeeg.eegfaktura.billing.security.JwtRequestFilter@6cd533a7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@26545fb7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38879c10, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8401a028, org.springframework.security.web.session.SessionManagementFilter@eb843482, org.springframework.security.web.access.ExceptionTranslationFilter@3cfafe46, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0bc59e]
2023-12-28T00:27:03.609+01:00  WARN 32199 --- [           main] o.s.b.a.f.FreeMarkerAutoConfiguration    : Cannot find template location(s): [classpath:/templates/] (please add some templates, check your FreeMarker configuration, or set spring.freemarker.check-template-location=false)
2023-12-28T00:27:03.831+01:00  INFO 32199 --- [           main] .v.e.b.EegfakturaBillingApplicationTests : Started EegfakturaBillingApplicationTests in 8.868 seconds (process running for 15.975)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="testBillingDocumentNumberGenerator_BeginWithZero" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.019">
    <system-out><![CDATA[Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="testBillingServicePreview" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="4.227">
    <system-out><![CDATA[Hibernate: select b1_0.id,b1_0.eec_bank_iban,b1_0.eec_bank_name,b1_0.eec_bank_owner,b1_0.eec_city,b1_0.eec_company_register_number,b1_0.eec_email,b1_0.eec_id,b1_0.eec_name,b1_0.eec_phone,b1_0.eec_street,b1_0.eec_subject_to_vat,b1_0.eec_tax_id,b1_0.eec_vat_id,b1_0.eec_zip_code,b1_0.equipment_number,b1_0.metering_equipment_name,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.participant_bank_iban,b1_0.participant_bank_name,b1_0.participant_bank_owner,b1_0.participant_city,b1_0.participant_company_register_number,b1_0.participant_email,b1_0.participant_firstname,b1_0.participant_id,b1_0.participant_lastname,b1_0.participant_number,b1_0.participant_sepa_mandate_issue_date,b1_0.participant_sepa_mandate_reference,b1_0.participant_street,b1_0.participant_tax_id,b1_0.participant_title_after,b1_0.participant_title_before,b1_0.participant_vat_id,b1_0.participant_zip_code,b1_0.tariff_basic_fee,b1_0.tariff_billing_period,b1_0.tariff_credit_amount_per_producedkwh,b1_0.tariff_discount,b1_0.tariff_freekwh,b1_0.tariff_name,b1_0.tariff_participant_fee,b1_0.tariff_participant_fee_discount,b1_0.tariff_participant_fee_name,b1_0.tariff_participant_fee_use_vat,b1_0.tariff_participant_fee_vat_in_percent,b1_0.tariff_type,b1_0.tariff_use_vat,b1_0.tariff_vat_in_percent,b1_0.tariff_working_fee_per_consumedkwh,b1_0.tenant_id from ( select md5(random()::text || clock_timestamp()::text)::uuid as id, m.* from base.billing_masterdata m ) b1_0 where b1_0.tenant_id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_config (after_items_text_credit_note,after_items_text_info,after_items_text_invoice,before_items_text_credit_note,before_items_text_info,before_items_text_invoice,credit_note_number_prefix,credit_note_number_start,custom_template_file_data_id,date_created,document_number_sequence_length,footer_image_file_data_id,footer_text,header_image_file_data_id,invoice_number_prefix,invoice_number_start,last_updated,tenant_id,terms_text_credit_note,terms_text_info,terms_text_invoice,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: select b1_0.id,b1_0.after_items_text_credit_note,b1_0.after_items_text_info,b1_0.after_items_text_invoice,b1_0.before_items_text_credit_note,b1_0.before_items_text_info,b1_0.before_items_text_invoice,b1_0.credit_note_number_prefix,b1_0.credit_note_number_start,b1_0.custom_template_file_data_id,b1_0.date_created,b1_0.document_number_sequence_length,b1_0.footer_image_file_data_id,b1_0.footer_text,b1_0.header_image_file_data_id,b1_0.invoice_number_prefix,b1_0.invoice_number_start,b1_0.last_updated,b1_0.tenant_id,b1_0.terms_text_credit_note,b1_0.terms_text_info,b1_0.terms_text_invoice from billing_config b1_0 where b1_0.tenant_id=? fetch first ? rows only
Hibernate: select b1_0.id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.last_updated,b1_0.mail_status,b1_0.mail_status_date_time,b1_0.number_of_credit_notes,b1_0.number_of_invoices,b1_0.run_status,b1_0.run_status_date_time,b1_0.sepa_status,b1_0.sepa_status_date_time,b1_0.tenant_id from billing_run b1_0 where b1_0.tenant_id=? and b1_0.clearing_period_type=? and b1_0.clearing_period_identifier=?
Hibernate: insert into billing_run (clearing_period_identifier,clearing_period_type,date_created,last_updated,mail_status,mail_status_date_time,number_of_credit_notes,number_of_invoices,run_status,run_status_date_time,sepa_status,sepa_status_date_time,tenant_id,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.after_items_text,b1_0.before_items_text,b1_0.billing_document_type,b1_0.billing_run_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.document_date,b1_0.document_number,b1_0.footer_text,b1_0.gross_amount_in_euro,b1_0.issuer_address_line1,b1_0.issuer_address_line2,b1_0.issuer_address_line3,b1_0.issuer_bankiban,b1_0.issuer_bank_name,b1_0.issuer_bank_owner,b1_0.issuer_company_register_number,b1_0.issuer_mail,b1_0.issuer_name,b1_0.issuer_phone,b1_0.issuer_tax_id,b1_0.issuer_vat_id,b1_0.issuer_website,b1_0.last_updated,b1_0.net_amount_in_euro,b1_0.participant_id,b1_0.recipient_address_line1,b1_0.recipient_address_line2,b1_0.recipient_address_line3,b1_0.recipient_bank_iban,b1_0.recipient_bank_name,b1_0.recipient_bank_owner,b1_0.recipient_email,b1_0.recipient_name,b1_0.recipient_participant_number,b1_0.recipient_sepa_mandate_issue_date,b1_0.recipient_sepa_mandate_reference,b1_0.status,b1_0.tenant_id,b1_0.terms_text,b1_0.vat1percent,b1_0.vat1sum_in_euro,b1_0.vat2percent,b1_0.vat2sum_in_euro from billing_document b1_0 where b1_0.billing_run_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select f1_0.id,f1_0.data,f1_0.date_created,f1_0.last_updated,f1_0.mime_type,f1_0.name,f1_0.tenant_id from file_data f1_0
]]></system-out>
  </testcase>
  <testcase name="testBillingServiceFinalWithDocumentDate" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="1.504">
    <system-out><![CDATA[Hibernate: select b1_0.id,b1_0.eec_bank_iban,b1_0.eec_bank_name,b1_0.eec_bank_owner,b1_0.eec_city,b1_0.eec_company_register_number,b1_0.eec_email,b1_0.eec_id,b1_0.eec_name,b1_0.eec_phone,b1_0.eec_street,b1_0.eec_subject_to_vat,b1_0.eec_tax_id,b1_0.eec_vat_id,b1_0.eec_zip_code,b1_0.equipment_number,b1_0.metering_equipment_name,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.participant_bank_iban,b1_0.participant_bank_name,b1_0.participant_bank_owner,b1_0.participant_city,b1_0.participant_company_register_number,b1_0.participant_email,b1_0.participant_firstname,b1_0.participant_id,b1_0.participant_lastname,b1_0.participant_number,b1_0.participant_sepa_mandate_issue_date,b1_0.participant_sepa_mandate_reference,b1_0.participant_street,b1_0.participant_tax_id,b1_0.participant_title_after,b1_0.participant_title_before,b1_0.participant_vat_id,b1_0.participant_zip_code,b1_0.tariff_basic_fee,b1_0.tariff_billing_period,b1_0.tariff_credit_amount_per_producedkwh,b1_0.tariff_discount,b1_0.tariff_freekwh,b1_0.tariff_name,b1_0.tariff_participant_fee,b1_0.tariff_participant_fee_discount,b1_0.tariff_participant_fee_name,b1_0.tariff_participant_fee_use_vat,b1_0.tariff_participant_fee_vat_in_percent,b1_0.tariff_type,b1_0.tariff_use_vat,b1_0.tariff_vat_in_percent,b1_0.tariff_working_fee_per_consumedkwh,b1_0.tenant_id from ( select md5(random()::text || clock_timestamp()::text)::uuid as id, m.* from base.billing_masterdata m ) b1_0 where b1_0.tenant_id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_config (after_items_text_credit_note,after_items_text_info,after_items_text_invoice,before_items_text_credit_note,before_items_text_info,before_items_text_invoice,credit_note_number_prefix,credit_note_number_start,custom_template_file_data_id,date_created,document_number_sequence_length,footer_image_file_data_id,footer_text,header_image_file_data_id,invoice_number_prefix,invoice_number_start,last_updated,tenant_id,terms_text_credit_note,terms_text_info,terms_text_invoice,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: select b1_0.id,b1_0.after_items_text_credit_note,b1_0.after_items_text_info,b1_0.after_items_text_invoice,b1_0.before_items_text_credit_note,b1_0.before_items_text_info,b1_0.before_items_text_invoice,b1_0.credit_note_number_prefix,b1_0.credit_note_number_start,b1_0.custom_template_file_data_id,b1_0.date_created,b1_0.document_number_sequence_length,b1_0.footer_image_file_data_id,b1_0.footer_text,b1_0.header_image_file_data_id,b1_0.invoice_number_prefix,b1_0.invoice_number_start,b1_0.last_updated,b1_0.tenant_id,b1_0.terms_text_credit_note,b1_0.terms_text_info,b1_0.terms_text_invoice from billing_config b1_0 where b1_0.tenant_id=? fetch first ? rows only
Hibernate: select b1_0.id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.last_updated,b1_0.mail_status,b1_0.mail_status_date_time,b1_0.number_of_credit_notes,b1_0.number_of_invoices,b1_0.run_status,b1_0.run_status_date_time,b1_0.sepa_status,b1_0.sepa_status_date_time,b1_0.tenant_id from billing_run b1_0 where b1_0.tenant_id=? and b1_0.clearing_period_type=? and b1_0.clearing_period_identifier=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_run (clearing_period_identifier,clearing_period_type,date_created,last_updated,mail_status,mail_status_date_time,number_of_credit_notes,number_of_invoices,run_status,run_status_date_time,sepa_status,sepa_status_date_time,tenant_id,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.after_items_text,b1_0.before_items_text,b1_0.billing_document_type,b1_0.billing_run_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.document_date,b1_0.document_number,b1_0.footer_text,b1_0.gross_amount_in_euro,b1_0.issuer_address_line1,b1_0.issuer_address_line2,b1_0.issuer_address_line3,b1_0.issuer_bankiban,b1_0.issuer_bank_name,b1_0.issuer_bank_owner,b1_0.issuer_company_register_number,b1_0.issuer_mail,b1_0.issuer_name,b1_0.issuer_phone,b1_0.issuer_tax_id,b1_0.issuer_vat_id,b1_0.issuer_website,b1_0.last_updated,b1_0.net_amount_in_euro,b1_0.participant_id,b1_0.recipient_address_line1,b1_0.recipient_address_line2,b1_0.recipient_address_line3,b1_0.recipient_bank_iban,b1_0.recipient_bank_name,b1_0.recipient_bank_owner,b1_0.recipient_email,b1_0.recipient_name,b1_0.recipient_participant_number,b1_0.recipient_sepa_mandate_issue_date,b1_0.recipient_sepa_mandate_reference,b1_0.status,b1_0.tenant_id,b1_0.terms_text,b1_0.vat1percent,b1_0.vat1sum_in_euro,b1_0.vat2percent,b1_0.vat2sum_in_euro from billing_document b1_0 where b1_0.billing_run_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select f1_0.id,f1_0.data,f1_0.date_created,f1_0.last_updated,f1_0.mime_type,f1_0.name,f1_0.tenant_id from file_data f1_0
]]></system-out>
  </testcase>
  <testcase name="testBillingConfig" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.028"/>
  <testcase name="testContainer" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.033"/>
  <testcase name="testBillingMasterdata" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.105">
    <system-out><![CDATA[Hibernate: select b1_0.id,b1_0.eec_bank_iban,b1_0.eec_bank_name,b1_0.eec_bank_owner,b1_0.eec_city,b1_0.eec_company_register_number,b1_0.eec_email,b1_0.eec_id,b1_0.eec_name,b1_0.eec_phone,b1_0.eec_street,b1_0.eec_subject_to_vat,b1_0.eec_tax_id,b1_0.eec_vat_id,b1_0.eec_zip_code,b1_0.equipment_number,b1_0.metering_equipment_name,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.participant_bank_iban,b1_0.participant_bank_name,b1_0.participant_bank_owner,b1_0.participant_city,b1_0.participant_company_register_number,b1_0.participant_email,b1_0.participant_firstname,b1_0.participant_id,b1_0.participant_lastname,b1_0.participant_number,b1_0.participant_sepa_mandate_issue_date,b1_0.participant_sepa_mandate_reference,b1_0.participant_street,b1_0.participant_tax_id,b1_0.participant_title_after,b1_0.participant_title_before,b1_0.participant_vat_id,b1_0.participant_zip_code,b1_0.tariff_basic_fee,b1_0.tariff_billing_period,b1_0.tariff_credit_amount_per_producedkwh,b1_0.tariff_discount,b1_0.tariff_freekwh,b1_0.tariff_name,b1_0.tariff_participant_fee,b1_0.tariff_participant_fee_discount,b1_0.tariff_participant_fee_name,b1_0.tariff_participant_fee_use_vat,b1_0.tariff_participant_fee_vat_in_percent,b1_0.tariff_type,b1_0.tariff_use_vat,b1_0.tariff_vat_in_percent,b1_0.tariff_working_fee_per_consumedkwh,b1_0.tenant_id from ( select md5(random()::text || clock_timestamp()::text)::uuid as id, m.* from base.billing_masterdata m ) b1_0 where b1_0.tenant_id=?
]]></system-out>
  </testcase>
  <testcase name="testBillingServiceFinal" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="1.773">
    <system-out><![CDATA[Hibernate: select b1_0.id,b1_0.eec_bank_iban,b1_0.eec_bank_name,b1_0.eec_bank_owner,b1_0.eec_city,b1_0.eec_company_register_number,b1_0.eec_email,b1_0.eec_id,b1_0.eec_name,b1_0.eec_phone,b1_0.eec_street,b1_0.eec_subject_to_vat,b1_0.eec_tax_id,b1_0.eec_vat_id,b1_0.eec_zip_code,b1_0.equipment_number,b1_0.metering_equipment_name,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.participant_bank_iban,b1_0.participant_bank_name,b1_0.participant_bank_owner,b1_0.participant_city,b1_0.participant_company_register_number,b1_0.participant_email,b1_0.participant_firstname,b1_0.participant_id,b1_0.participant_lastname,b1_0.participant_number,b1_0.participant_sepa_mandate_issue_date,b1_0.participant_sepa_mandate_reference,b1_0.participant_street,b1_0.participant_tax_id,b1_0.participant_title_after,b1_0.participant_title_before,b1_0.participant_vat_id,b1_0.participant_zip_code,b1_0.tariff_basic_fee,b1_0.tariff_billing_period,b1_0.tariff_credit_amount_per_producedkwh,b1_0.tariff_discount,b1_0.tariff_freekwh,b1_0.tariff_name,b1_0.tariff_participant_fee,b1_0.tariff_participant_fee_discount,b1_0.tariff_participant_fee_name,b1_0.tariff_participant_fee_use_vat,b1_0.tariff_participant_fee_vat_in_percent,b1_0.tariff_type,b1_0.tariff_use_vat,b1_0.tariff_vat_in_percent,b1_0.tariff_working_fee_per_consumedkwh,b1_0.tenant_id from ( select md5(random()::text || clock_timestamp()::text)::uuid as id, m.* from base.billing_masterdata m ) b1_0 where b1_0.tenant_id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_config (after_items_text_credit_note,after_items_text_info,after_items_text_invoice,before_items_text_credit_note,before_items_text_info,before_items_text_invoice,credit_note_number_prefix,credit_note_number_start,custom_template_file_data_id,date_created,document_number_sequence_length,footer_image_file_data_id,footer_text,header_image_file_data_id,invoice_number_prefix,invoice_number_start,last_updated,tenant_id,terms_text_credit_note,terms_text_info,terms_text_invoice,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: select b1_0.id,b1_0.after_items_text_credit_note,b1_0.after_items_text_info,b1_0.after_items_text_invoice,b1_0.before_items_text_credit_note,b1_0.before_items_text_info,b1_0.before_items_text_invoice,b1_0.credit_note_number_prefix,b1_0.credit_note_number_start,b1_0.custom_template_file_data_id,b1_0.date_created,b1_0.document_number_sequence_length,b1_0.footer_image_file_data_id,b1_0.footer_text,b1_0.header_image_file_data_id,b1_0.invoice_number_prefix,b1_0.invoice_number_start,b1_0.last_updated,b1_0.tenant_id,b1_0.terms_text_credit_note,b1_0.terms_text_info,b1_0.terms_text_invoice from billing_config b1_0 where b1_0.tenant_id=? fetch first ? rows only
Hibernate: select b1_0.id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.last_updated,b1_0.mail_status,b1_0.mail_status_date_time,b1_0.number_of_credit_notes,b1_0.number_of_invoices,b1_0.run_status,b1_0.run_status_date_time,b1_0.sepa_status,b1_0.sepa_status_date_time,b1_0.tenant_id from billing_run b1_0 where b1_0.tenant_id=? and b1_0.clearing_period_type=? and b1_0.clearing_period_identifier=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_run (clearing_period_identifier,clearing_period_type,date_created,last_updated,mail_status,mail_status_date_time,number_of_credit_notes,number_of_invoices,run_status,run_status_date_time,sepa_status,sepa_status_date_time,tenant_id,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: insert into billing_document (after_items_text,before_items_text,billing_document_type,billing_run_id,clearing_period_identifier,clearing_period_type,date_created,document_date,document_number,footer_text,gross_amount_in_euro,issuer_address_line1,issuer_address_line2,issuer_address_line3,issuer_bankiban,issuer_bank_name,issuer_bank_owner,issuer_company_register_number,issuer_mail,issuer_name,issuer_phone,issuer_tax_id,issuer_vat_id,issuer_website,last_updated,net_amount_in_euro,participant_id,recipient_address_line1,recipient_address_line2,recipient_address_line3,recipient_bank_iban,recipient_bank_name,recipient_bank_owner,recipient_email,recipient_name,recipient_participant_number,recipient_sepa_mandate_issue_date,recipient_sepa_mandate_reference,status,tenant_id,terms_text,vat1percent,vat1sum_in_euro,vat2percent,vat2sum_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into billing_document_item (amount,billing_document_id,clearing_period_identifier,clearing_period_type,date_created,discount_percent,gross_value,last_updated,metering_point_id,metering_point_type,net_value,ppu_unit,price_per_unit,tenant_id,text,unit,vat_percent,vat_value_in_euro,id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
Hibernate: insert into file_data (data,date_created,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?)
Hibernate: insert into billing_document_file (billing_document_id,date_created,file_data_id,last_updated,mime_type,name,tenant_id,id) values (?,?,?,?,?,?,?,?)
Hibernate: update billing_document set after_items_text=?,before_items_text=?,billing_document_type=?,billing_run_id=?,clearing_period_identifier=?,clearing_period_type=?,document_date=?,document_number=?,footer_text=?,gross_amount_in_euro=?,issuer_address_line1=?,issuer_address_line2=?,issuer_address_line3=?,issuer_bankiban=?,issuer_bank_name=?,issuer_bank_owner=?,issuer_company_register_number=?,issuer_mail=?,issuer_name=?,issuer_phone=?,issuer_tax_id=?,issuer_vat_id=?,issuer_website=?,last_updated=?,net_amount_in_euro=?,participant_id=?,recipient_address_line1=?,recipient_address_line2=?,recipient_address_line3=?,recipient_bank_iban=?,recipient_bank_name=?,recipient_bank_owner=?,recipient_email=?,recipient_name=?,recipient_participant_number=?,recipient_sepa_mandate_issue_date=?,recipient_sepa_mandate_reference=?,status=?,tenant_id=?,terms_text=?,vat1percent=?,vat1sum_in_euro=?,vat2percent=?,vat2sum_in_euro=? where id=?
Hibernate: select b1_0.id,b1_0.billing_document_id,b1_0.date_created,b1_0.file_data_id,b1_0.last_updated,b1_0.mime_type,b1_0.name,b1_0.tenant_id from billing_document_file b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.after_items_text,b1_0.before_items_text,b1_0.billing_document_type,b1_0.billing_run_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.document_date,b1_0.document_number,b1_0.footer_text,b1_0.gross_amount_in_euro,b1_0.issuer_address_line1,b1_0.issuer_address_line2,b1_0.issuer_address_line3,b1_0.issuer_bankiban,b1_0.issuer_bank_name,b1_0.issuer_bank_owner,b1_0.issuer_company_register_number,b1_0.issuer_mail,b1_0.issuer_name,b1_0.issuer_phone,b1_0.issuer_tax_id,b1_0.issuer_vat_id,b1_0.issuer_website,b1_0.last_updated,b1_0.net_amount_in_euro,b1_0.participant_id,b1_0.recipient_address_line1,b1_0.recipient_address_line2,b1_0.recipient_address_line3,b1_0.recipient_bank_iban,b1_0.recipient_bank_name,b1_0.recipient_bank_owner,b1_0.recipient_email,b1_0.recipient_name,b1_0.recipient_participant_number,b1_0.recipient_sepa_mandate_issue_date,b1_0.recipient_sepa_mandate_reference,b1_0.status,b1_0.tenant_id,b1_0.terms_text,b1_0.vat1percent,b1_0.vat1sum_in_euro,b1_0.vat2percent,b1_0.vat2sum_in_euro from billing_document b1_0 where b1_0.billing_run_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select b1_0.id,b1_0.amount,b1_0.billing_document_id,b1_0.clearing_period_identifier,b1_0.clearing_period_type,b1_0.date_created,b1_0.discount_percent,b1_0.gross_value,b1_0.last_updated,b1_0.metering_point_id,b1_0.metering_point_type,b1_0.net_value,b1_0.ppu_unit,b1_0.price_per_unit,b1_0.tenant_id,b1_0.text,b1_0.unit,b1_0.vat_percent,b1_0.vat_value_in_euro from billing_document_item b1_0 where b1_0.billing_document_id=?
Hibernate: select f1_0.id,f1_0.data,f1_0.date_created,f1_0.last_updated,f1_0.mime_type,f1_0.name,f1_0.tenant_id from file_data f1_0
]]></system-out>
  </testcase>
  <testcase name="testBillingDocumentNumberGenerator_TenInARow" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.284">
    <system-out><![CDATA[Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="contextLoads" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.018"/>
  <testcase name="testBillingDocumentNumberGenerator_BeginWithOne" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.035">
    <system-out><![CDATA[Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
]]></system-out>
  </testcase>
  <testcase name="testBillingDocumentNumberGenerator_ExceedingSequenceLength" classname="org.vfeeg.eegfaktura.billing.EegfakturaBillingApplicationTests" time="0.032">
    <system-out><![CDATA[Hibernate: select max(b1_0.sequence_number) from billing_document_number b1_0 where b1_0.tenant_id=? and b1_0.year=? and b1_0.prefix=? group by b1_0.tenant_id,b1_0.year,b1_0.prefix
Hibernate: insert into billing_document_number (date_created,document_number,document_type,last_updated,prefix,sequence_number,tenant_id,year,id) values (?,?,?,?,?,?,?,?,?)
]]></system-out>
  </testcase>
</testsuite>